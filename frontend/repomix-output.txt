This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-03-17T10:50:39.906Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
component/container.tsx
component/header.tsx
component/navbar.tsx
config/supabase.ts
context/queryClient.tsx
lynx.config.ts
package.json
postcss.config.ts
README.md
src/analysis.tsx
src/App.css
src/App.tsx
src/expenses.tsx
src/home.tsx
src/index.tsx
src/rspeedy-env.d.ts
src/settings.tsx
tailwind.config.ts
tsconfig.json

================================================================
Repository Files
================================================================

================
File: component/container.tsx
================
import NavBar from "./navbar.tsx"

export default function Container({ children }: { children: React.ReactNode }) {
  return (
    <view className="container">
      {children}
      <NavBar />
    </view>
  );
}

================
File: component/header.tsx
================
export default function Header({ title }: { title: string }) {
    return (
      <view className="header">
        <text className="header-text">{title}</text>
      </view>
    );
  }

================
File: component/navbar.tsx
================
import { useNavigate } from "react-router";

export default function NavBar() {
  const nav = useNavigate();

  return (
    <view className="nav-bar">
      <text className="tab" bindtap={() => nav("/")}>
        Home
      </text>
      <text className="tab" bindtap={() => nav("/expenses")}>
        Expenses
      </text>
      <text className="tab" bindtap={() => nav("/analysis")}>
        Analysis
      </text>
      <text className="tab" bindtap={() => nav("/settings")}>
        Settings
      </text>
    </view>
  );
}

================
File: config/supabase.ts
================
import { createClient } from "@supabase/supabase-js";

const SUPABASE_URL = "https://bwhtzaixmmndrusigggw.supabase.co";
const SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ3aHR6YWl4bW1uZHJ1c2lnZ2d3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE5NTkzMDUsImV4cCI6MjA1NzUzNTMwNX0.qlkSoKKFrDabwsXxwObLdF5hjSju65SA-F0EfZ2Aoqc";

export const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {
  global: { fetch: fetch.bind(globalThis) },
});

================
File: context/queryClient.tsx
================
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";

const queryClient = new QueryClient();

export function QueryProvider({ children }: { children: React.ReactNode }) {
  return <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>;
}

================
File: lynx.config.ts
================
import { defineConfig } from '@lynx-js/rspeedy'

import { pluginQRCode } from '@lynx-js/qrcode-rsbuild-plugin'
import { pluginReactLynx } from '@lynx-js/react-rsbuild-plugin'

import {pluginTailwindCSS} from 'rsbuild-plugin-tailwindcss'

export default defineConfig({
  plugins: [
    pluginQRCode({
      schema(url) {
        // We use `?fullscreen=true` to open the page in LynxExplorer in full screen mode
        return `${url}?fullscreen=true`
      },
    }),
    pluginReactLynx(),
    pluginTailwindCSS({
      config: './tailwind.config.ts',
      include: /\.[jt]sx?/,
      exclude: ["./src/store/**", /[\\/]node_modules[\\/]/],
    }),
  ],
})

================
File: package.json
================
{
  "name": "rspeedy-react-ts",
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "build": "rspeedy build",
    "dev": "rspeedy dev",
    "preview": "rspeedy preview"
  },
  "dependencies": {
    "@lynx-js/react": "^0.105.1",
    "@tanstack/react-query": "^5.68.0",
    "react-router": "^6.30.0"
  },
  "devDependencies": {
    "@lynx-js/qrcode-rsbuild-plugin": "^0.3.4",
    "@lynx-js/react-rsbuild-plugin": "^0.9.1",
    "@lynx-js/rspeedy": "^0.8.3",
    "@lynx-js/tailwind-preset": "^0.0.2",
    "@lynx-js/types": "^3.2.0",
    "@types/react": "^18.3.18",
    "rsbuild-plugin-tailwindcss": "^0.2.0",
    "tailwindcss": "^3.4.17",
    "typescript": "~5.7.3"
  },
  "engines": {
    "node": ">=18"
  }
}

================
File: postcss.config.ts
================
export default {
    plugins: {
      cssnano: process.env["NODE_ENV"] === "production" ? {} : false,
    },
  };

================
File: README.md
================
## Rspeedy project

This is a ReactLynx project bootstrapped with `create-rspeedy`.

## Getting Started

First, install the dependencies:

```bash
pnpm install
```

Then, run the development server:

```bash
pnpm run dev
```

Scan the QRCode in the terminal with your LynxExplorer App to see the result.

You can start editing the page by modifying `src/App.tsx`. The page auto-updates as you edit the file.

================
File: src/analysis.tsx
================
import Container from "../component/container.tsx"
import Header from "../component/header.tsx"

export function Analysis() {
  return (
    <Container>
      <Header title="Analysis" />
      <text>Welcome to Spendee!</text>
    </Container>
  );
}

export default Analysis;

================
File: src/App.css
================
:root {
  --background-color: #FFFBF2;
  --color-text: #17171A;
  --primary-color: #386641;
  --secondary-color: #BC4749;
  --accent-color: #F2E8CF;
  --text-back-color: #9DA3B7;
}

body {
  background-color: var(--primary-color);
  color: var(--color-text);
  font-family: 'SF Pro Text', sans-serif;
}

.container {
  margin: 50px 10px 0;
  height: calc(100vh - 50px);
  background-color: var(--background-color);
}

.header {
  position: fixed;
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 50px;
  padding: 0 15px;
  width: 100%;
  background-color: var(--primary-color);
  font-family: 'SF Pro Display', sans-serif;
}

.nav-bar {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  display: flex;
  justify-content: space-around;
  padding: 10px 0;
  background-color: var(--primary-color);
  color: var(--background-color);
  font-family: 'SF Pro Display', sans-serif;
}

.tab {
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  color: var(--background-color); 
}

.logo {
  width: 30px;
  height: 30px;
}

.header-text {
  font-size: 18px;
  font-weight: bold;
  color: var(--background-color); 
}

/* Card Component */
.card {
  background-color: var(--background-color);
  padding: 15px;
  border-radius: 8px;
  margin: 10px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  color: var(--color-text);
}

.card-title {
  font-size: 16px;
  font-weight: bold;
  color: var(--primary-color);
}

.card-value {
  font-size: 20px;
  font-weight: bold;
  color: var(--secondary-color);
}

================
File: src/App.tsx
================
import { MemoryRouter, Routes, Route } from "react-router";
import Home from "./home.tsx";
import Expenses from "./expenses.tsx";
import Analysis from "./analysis.tsx";
import Settings from "./settings.tsx";

export function App() {
  return (
      <MemoryRouter>
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/expenses" element={<Expenses/>} /> 
          <Route path="/analysis" element={<Analysis/>}/>
          <Route path="/settings" element={<Settings />} />
        </Routes>
      </MemoryRouter>
  );
}

================
File: src/expenses.tsx
================
import Container from "../component/container.tsx"
import Header from "../component/header.tsx"

export function Expenses() {
  return (
    <Container>
      <Header title="Expenses" />
      <text>Welcome to Spendee!</text>
    </Container>
  );
}

export default Expenses;

================
File: src/home.tsx
================
import { useQuery } from "@tanstack/react-query";
import Container from "../component/container.tsx";
import Header from "../component/header.tsx";

export function Home() {
  const { data, isLoading, error } = useQuery({
    queryKey: ["hello"],
    queryFn: async () => {
      const res = await fetch("http://192.168.10.75:8080");
      return res.json();
    },
  });

  return (
    <Container>
      <Header title="Home" />
      {isLoading && <text>Loading...</text>}
      {error && <text>Error fetching data</text>}
      {data && <text>{data.message}</text>}
      <text>Env Test: {JSON.stringify(import.meta.env)}</text>
    </Container>
  );
}

export default Home;

================
File: src/index.tsx
================
import { root } from "@lynx-js/react";

import { App } from "./App.tsx";
import "tailwindcss/utilities.css";
import "./app.css";

import { QueryProvider } from "../context/queryClient.tsx"
root.render(
  <QueryProvider>
    <App />
  </QueryProvider>
);
if (import.meta.webpackHot) {
  import.meta.webpackHot.accept();
}

================
File: src/rspeedy-env.d.ts
================
/// <reference types="@lynx-js/rspeedy/client" />

================
File: src/settings.tsx
================
import Container from "../component/container.tsx"
import Header from "../component/header.tsx"

export function Settings() {
  return (
    <Container>
      <Header title="Settings" />
      <text>Welcome to Spendee!</text>
    </Container>
  );
}

export default Settings;

================
File: tailwind.config.ts
================
const lynxPreset = require('@lynx-js/tailwind-preset');

/** @type {import('tailwindcss').Config} */
export default {
    mode: 'jit',
    presets: [lynxPreset],
    content: ['./src/**/*.{js,jsx,ts,tsx}'],
    purge: ['./src/**/*.{js,jsx,ts,tsx}'],
    plugin: [],
    theme: {
      colors: {
        blue: "#1fb6ff",
        purple: "#7e5bef",
        pink: "#ff49db",
        orange: "#ff7849",
        green: "#13ce66",
        yellow: "#ffc82c",
        "gray-dark": "#273444",
        gray: "#8492a6",
        "gray-light": "#d3dce6",
      },
    },
  };

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "jsx": "preserve",
    "allowImportingTsExtensions": true,
    "module": "node16",
    "moduleResolution": "node16",
    "strict": true,
    "isolatedModules": true,
    "verbatimModuleSyntax": true,
    "noEmit": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
  },
  "exclude": ["dist/"],
}
